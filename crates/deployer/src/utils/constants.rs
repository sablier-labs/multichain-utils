// Default Sablier deployer address as a string.
pub const DEFAULT_DEPLOYER: &str = "0xb1bEF51ebCA01EB12001a639bDBbFF6eEcA12B9F";

// A help message for the CLI tool that is displayed when the `--help` flag is passed.
pub const HELP_MESSAGE: &str = r#"
Usage:
  multichain-utils <chain_name> [OPTIONS]

Flags:
  --all          Deploy on all chains declared in the `foundry.toml` file
  --cp-bf        Copy the broadcasts generated by foundry to the `deployments` directory
  --broadcast    Whether the deployment should be broadcasted or not
  --gas-price    Specify the gas price for the deployment in wei
  --help         Print a help message
  --log          Enable logging of broadcasts
  --script       The script to run for deployment
  --show         Instead of executing the deployments, simply prints the CLI commands that would be run
  --verify       Verify deployment on the respective chain explorer

Example:
  multichain-utils sepolia --script DeployFlow.s.sol

Output:
  Deploying to the chains: sepolia
  Running the deployment command:
    FOUNDRY_PROFILE=optimized forge script script/DeployFlow.s.sol --rpc-url sepolia

Assumptions:
  - The script is run within a Foundry project, with a `script` directory at the project root.
  - Chain names match those declared in the `foundry.toml` file.
  - If `--cp-bf` is used, the `deployments` directory is expected to exist at `../deployments`.
  - If `--verify` is used, Etherscan API keys must be set in the `.env` file: <chain_name_from_foundry_toml>_API_KEY
    Example:
      MAINNET_API_KEY for `mainnet`
      AVALANCHE_API_KEY for `avalanche`
"#;
